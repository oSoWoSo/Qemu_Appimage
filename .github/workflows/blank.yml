# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 12th day-of-month.
  schedule:
    - cron: "0 0 */12 * *"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main,q,quickemu ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ main,q,quickemu ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-stable"
  build-stable:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Prerequisites
        run: |
          sudo apt -y install ninja-build python3-venv git pkg-config libglib2.0-dev flex bison libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev
          sudo apt-get -y install libaio-dev libbluetooth-dev libcapstone-dev libbrlapi-dev libbz2-dev libusb* \
                               libcap-ng-dev libcurl4-gnutls-dev libgtk-3-dev libnfs* slirp* libslirp0 libslirp-dev \
                               libibverbs-dev libjpeg8-dev libncurses5-dev libnuma-dev \
                               librbd-dev librdmacm-dev \
                               libsasl2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh-dev \
                               libvde-dev libvdeplug-dev libvte-2.91-dev libxen-dev liblzo2-dev \
                               valgrind xfslibs-dev
          sudo apt-get -y install bash \
           coreutils \
           fuse3 \
           genisoimage \
           grep \
           jq \
           libcacard-dev \
           libglib2.0-dev \
           libspice-protocol-dev \
           libspice-server-dev \
           libvirglrenderer-dev \
           libzstd-dev \
           lsb-base \
           ovmf \
           procps \
           sed \
           spice-client-gtk \
           tss2 \
           unzip \
           usbutils \
           wget \
           zsync
          wget -q "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage" -O linuxdeploy ; chmod a+x linuxdeploy
          wget -q "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" -O appimagetool ; chmod a+x appimagetool
          sudo add-apt-repository -y ppa:flexiondotorg/quickemu
          sudo apt-get update && sudo apt-get -y install quickemu
          mkdir -p lucas/usr/bin
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg  --batch --yes --dearmor -o /etc/apt/keyrings/charm.gpg
          echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
          sudo apt-get -y update && sudo apt-get -y install gum
          mkdir -p lucas/usr/lib/
          mkdir -p lucas/usr/share/
          cp -r /usr/share/mime/ lucas/usr/share/
          git clone https://gitlab.com/qemu-project/qemu.git
          cd qemu
          git submodule init
          git submodule update --recursive
          ./configure --enable-sdl --enable-gtk --enable-opengl --enable-kvm --enable-gnutls --enable-libssh --enable-libusb --enable-libudev --enable-nettle --enable-alsa --enable-pa --enable-slirp --enable-slirp-smbd \
            --enable-brlapi \
            --enable-guest-agent \
            --enable-netmap \
            --enable-pixman \
            --enable-png \
            --enable-smartcard \
            --enable-spice \
            --enable-spice-protocol \
            --enable-tpm \
            --enable-usb-redir \
            --enable-vde \
            --enable-vdi \
            --enable-vduse-blk-export \
            --enable-vhdx \
            --enable-vhost-crypto \
            --enable-vhost-kernel \
            --enable-vhost-net \
            --enable-vhost-user \
            --enable-vhost-user-blk-server \
            --enable-vhost-vdpa \
            --enable-virglrenderer \
            --enable-vmdk \
            --enable-vnc \
            --enable-vnc-jpeg \
            --enable-vnc-sasl \
            --enable-vpc \
            --enable-vte \
            --enable-vvfat \
            --enable-xen \
            --enable-xen-pci-passthrough \
            --enable-zstd \
            --target-list=x86_64-linux-user --prefix=${GITHUB_WORKSPACE}/lucas/usr/
          make
          make install
          cd ..
          wget -q https://raw.githubusercontent.com/oSoWoSo/DistroHopper/all/q; chmod a+x q
          chmod a+x q && mkdir -p lucas/usr/bin && cp q lucas/usr/bin/
          cp q.desktop q_logo_no_text.svg AppRun libunionpreload.so lucas/

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
        
          ./linuxdeploy --appdir lucas/
          cp q.desktop lucas/
          ARCH=x86_64 ./appimagetool -n lucas/

      - name: release
        uses: "marvinpinto/action-automatic-releases@6273874b61ebc8c71f1a61b2d98e234cf389b303"
        with:
          title: Continuous build
          automatic_release_tag: continuous-stable
          prerelease: false
          draft: false
          files: /home/runner/work/Qemu_Appimage/Qemu_Appimage/*.AppImage*
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
